import{_ as e,c as o,o as t,ag as r}from"./chunks/framework.DpfH8Q0y.js";const d=JSON.parse('{"title":"Философия","description":"","frontmatter":{},"headers":[],"relativePath":"ru/philosophy.md","filePath":"ru/philosophy.md","lastUpdated":1761834216000}'),s={name:"ru/philosophy.md"};function l(n,a,p,i,h,c){return t(),o("div",null,[...a[0]||(a[0]=[r('<h1 id="философия" tabindex="-1">Философия <a class="header-anchor" href="#философия" aria-label="Permalink to &quot;Философия&quot;">​</a></h1><h2 id="зачем-capsuleui" tabindex="-1">Зачем CapsuleUI? <a class="header-anchor" href="#зачем-capsuleui" aria-label="Permalink to &quot;Зачем CapsuleUI?&quot;">​</a></h2><p>CapsuleUI была создана для систематизации и унификации работы с интерфейсными компонентами в проектах, использующих микрофронтенды и различные стеки (React, Vue, статический HTML, серверные шаблоны и др.). В подобных проектах многократное дублирование компонентов, вариаций классов и ручное внедрение логики приводят к усложнению поддержки и росту технического долга. Реализация даже базовых элементов (например, кнопки) усложняется необходимостью ручного управления размерами, вариантами и состояниями на уровне классов, что снижает читаемость и увеличивает риск ошибок.</p><h2 id="почему-web-components" tabindex="-1">Почему Web Components? <a class="header-anchor" href="#почему-web-components" aria-label="Permalink to &quot;Почему Web Components?&quot;">​</a></h2><p>Использование Web Components позволяет реализовать унифицированные и изолированные интерфейсные элементы независимо от фреймворка или платформы. Эта технология основана на стандартах браузера, поддерживает реактивность через атрибуты и обеспечивает надежную инкапсуляцию. Компоненты CapsuleUI интегрируются в любой стек (React, Vue, серверный HTML) без дополнительных зависимостей, гарантируя единообразие поведения и расширяемость.</p><h2 id="почему-cli" tabindex="-1">Почему CLI? <a class="header-anchor" href="#почему-cli" aria-label="Permalink to &quot;Почему CLI?&quot;">​</a></h2><p>CLI CapsuleUI позволяет структурировать внедрение и обновление компонентов. Автоматизированная генерация файлов, настройка префиксов, обновление зависимостей и инициализация новых проектов обеспечивают надежность, повторяемость и удобство внедрения библиотеки в разнородные окружения.</p><h2 id="вдохновение" tabindex="-1">Вдохновение <a class="header-anchor" href="#вдохновение" aria-label="Permalink to &quot;Вдохновение&quot;">​</a></h2><p>CapsuleUI ориентируется на подходы системных дизайн‑китов, таких как shadcn/ui, но реализует эти концепции на основе Web Components как единого технологического стандарта. Конечной целью является создание универсальной, расширяемой базы компонентов, легко адаптируемой для любых проектов и стилей.</p>',9)])])}const _=e(s,[["render",l]]);export{d as __pageData,_ as default};
