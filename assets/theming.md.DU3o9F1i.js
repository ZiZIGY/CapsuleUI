import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.DpfH8Q0y.js";const k=JSON.parse('{"title":"Theming","description":"","frontmatter":{},"headers":[],"relativePath":"theming.md","filePath":"theming.md","lastUpdated":1761859591000}'),n={name:"theming.md"};function l(h,s,o,p,r,d){return e(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="theming" tabindex="-1">Theming <a class="header-anchor" href="#theming" aria-label="Permalink to &quot;Theming&quot;">​</a></h1><p>CapsuleUI is fully themeable via CSS variables. All design tokens and palette variables are defined in <code>@capsule/global.css</code> (in the <code>@capsule</code> folder), and each component already ships with its own CSS file, e.g. <code>@capsule/components/capsule-button/capsule-button.style.css</code>.</p><h2 id="capsuleui-variables" tabindex="-1">CapsuleUI variables <a class="header-anchor" href="#capsuleui-variables" aria-label="Permalink to &quot;CapsuleUI variables&quot;">​</a></h2><p>In <code>@capsule/global.css</code>, you&#39;ll find color, radius, shadow, etc. definitions—using <code>light-dark()</code> for auto light/dark support:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:root</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --capsule-color-primary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: light-dark(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#2563eb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#3b82f6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --capsule-color-error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: light-dark(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#dc2626</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#ef4444</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* ... */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:root.light</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">color-scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">light</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:root.dark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">color-scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; }</span></span></code></pre></div><h2 id="customizing-the-theme" tabindex="-1">Customizing the theme <a class="header-anchor" href="#customizing-the-theme" aria-label="Permalink to &quot;Customizing the theme&quot;">​</a></h2><ul><li><strong>Override any variable</strong> in <code>:root {}</code> in your project or via a separate CSS file.</li><li><strong>Switch between themes</strong> using <code>.light</code>/<code>.dark</code> classes on <code>&lt;html&gt;</code> or <code>&lt;body&gt;</code>, variables update automatically.</li><li><strong>Tweak specific tokens</strong> (radii, fonts, colors, etc).</li></ul><h2 id="per-component-customization" tabindex="-1">Per-component customization <a class="header-anchor" href="#per-component-customization" aria-label="Permalink to &quot;Per-component customization&quot;">​</a></h2><p>Every component includes its own CSS file, loaded automatically—no need to copy or edit it. To customize a specific component, just override variables or write styles in your own CSS:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">capsule-button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* your variables or styles */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,10)])])}const g=i(n,[["render",l]]);export{k as __pageData,g as default};
